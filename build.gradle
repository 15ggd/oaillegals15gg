plugins {
    id 'java'
}

group = 'fanlim.dev'
version = '1.3.53'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    // Add Adventure repository
    maven {
        name = "advntr-repo"
        url = "https://repo.advntr.dev/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    // Add Adventure API dependencies
    implementation "net.kyori:adventure-api:4.11.0"
    implementation "net.kyori:adventure-platform-bukkit:4.3.0"
    implementation "net.kyori:adventure-text-minimessage:4.11.0"
}

// Determine Java version dynamically using switch
static def getTargetJavaVersion() {
    def javaVersion = System.getProperty("java.version")
    switch (javaVersion) {
        case { it.startsWith("1.8") }:
            return 8
        case { it.startsWith("16") }:
            return 16
        case { it.startsWith("17") }:
            return 17
        case { it.startsWith("21") }:
            return 21
        default:
            return 17 // Default to Java 17 if unknown
    }
}

def targetJavaVersion = getTargetJavaVersion()

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
    targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
