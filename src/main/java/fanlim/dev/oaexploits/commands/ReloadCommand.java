package fanlim.dev.oaexploits.commands;

import fanlim.dev.oaexploits.Oaexploits;
import fanlim.dev.oaexploits.antiexploits.AntiIllegalItems;
import fanlim.dev.oaexploits.antiexploits.ChunkDataHandler;
import fanlim.dev.oaexploits.chunks.ChunkLimiter;
import fanlim.dev.oaexploits.players.PlayerDeopOnLeave;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;

public class ReloadCommand implements CommandExecutor {

    private final Oaexploits plugin;
    private final ChunkDataHandler chunkDataHandler;
    private final AntiIllegalItems antiIllegalItems;
    private final ChunkLimiter chunkLimiter;
    private final PlayerDeopOnLeave playerDeopOnLeave;

    public ReloadCommand(Oaexploits plugin, ChunkDataHandler chunkDataHandler, AntiIllegalItems antiIllegalItems, ChunkLimiter chunkLimiter, PlayerDeopOnLeave playerDeopOnLeave) {
        this.plugin = plugin;
        this.chunkDataHandler = chunkDataHandler;
        this.antiIllegalItems = antiIllegalItems;
        this.chunkLimiter = chunkLimiter;
        this.playerDeopOnLeave = playerDeopOnLeave;
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (command.getName().equalsIgnoreCase("oaexploits")) {
            if (args.length > 0 && args[0].equalsIgnoreCase("reload")) {
                plugin.reloadConfig();
                chunkDataHandler.reloadConfigValues();
                antiIllegalItems.reloadConfigValues();
                chunkLimiter.reloadChunkLimiterConfig();
                playerDeopOnLeave.reloadConfigValues();
                sender.sendMessage("Oaexploits configuration reloaded.");
                return true;
            }
        }
        return false;
    }
}
